volumes:
  pg_proninteam_data:
  redis_data:
  static_data:
  

services:
  postgres:
    container_name: proninteam_database
    image: postgres:17.1-alpine3.20
    env_file: .env
    volumes:
      - pg_proninteam_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.4-alpine
    container_name: proninteam_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: proninteam_backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - static_data:/app/static
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: proninteam_celery
    command: celery -A proninteam worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - backend
      - redis
